{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, MutableRefObject } from \"react\";\nimport {\n  GeocoderAutocomplete,\n  LocationType,\n  SupportedLanguage,\n  GeoPosition,\n  CountyCode,\n  ByCountryCodeOptions,\n  ByCircleOptions,\n  ByRectOptions,\n  ByProximityOptions,\n} from '@geoapify/geocoder-autocomplete';\n\nexport const GeoapifyApiKey = React.createContext<string>('');\n\nexport const GeoapifyContext = (props: any) => {\n  return (\n    <GeoapifyApiKey.Provider value={props.apiKey}>\n      {props.children}\n    </GeoapifyApiKey.Provider>\n  );\n};\n\nexport interface GeoapifyGeocoderAutocompleteOptions {\n  value?: string;\n  type?: LocationType;\n  lang?: SupportedLanguage;\n  limit?: number;\n  placeholder?: string;\n  filterByCountryCode?: ByCountryCodeOptions;\n  filterByPlace?: string;\n  filterByCircle?: ByCircleOptions;\n  filterByRect?: ByRectOptions;\n  biasByCountryCode?: ByCountryCodeOptions;\n  biasByCircle?: ByCircleOptions;\n  biasByRect?: ByRectOptions;\n  biasByProximity?: ByProximityOptions;\n  position?: GeoPosition;\n  countryCodes?: CountyCode[];\n\n  debounceDelay?: number\n  skipIcons?: boolean;\n  addDetails?: boolean;\n  skipSelectionOnArrowKey?: boolean;\n  allowNonVerifiedHouseNumber?: boolean;\n  allowNonVerifiedStreet?: boolean;\n\n  placeSelect?: (value: any) => void;\n  suggestionsChange?: (value: any) => void;\n\n  preprocessHook?: (value: string) => string;\n  postprocessHook?: (feature: any) => string;\n  suggestionsFilter?: (suggestions: any[]) => any[];\n  sendGeocoderRequestFunc?: (value: string, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>;\n  sendPlaceDetailsRequestFunc?: (feature: any, geocoderAutocomplete: GeocoderAutocomplete) => Promise<any>;\n\n  onUserInput?: (input: string) => void;\n  onOpen?: (opened: boolean) => void;\n  onClose?: (opened: boolean) => void;\n  onRequestStart?: (value: string) => void;\n  onRequestEnd?: (success: boolean, data?: any, error?: any) => void;\n}\n\nexport const GeoapifyGeocoderAutocomplete = ({\n  placeholder: placeholderValue,\n  type: typeValue,\n  lang: langValue,\n  limit: limitValue,\n  value: valueValue,\n  filterByCountryCode: filterByCountryCodeValue,\n  filterByCircle: filterByCircleValue,\n  filterByRect: filterByRectValue,\n  filterByPlace: filterByPlaceValue,\n  biasByCountryCode: biasByCountryCodeValue,\n  biasByCircle: biasByCircleValue,\n  biasByRect: biasByRectValue,\n  biasByProximity: biasByProximityValue,\n  position: positionValue,\n  countryCodes: countryCodesValue,\n  debounceDelay: debounceDelayValue,\n  skipIcons: skipIconsValue,\n  skipSelectionOnArrowKey: skipSelectionOnArrowKeyValue,\n  allowNonVerifiedHouseNumber: allowNonVerifiedHouseNumberValue,\n  allowNonVerifiedStreet: allowNonVerifiedStreetValue,\n  addDetails: addDetailsValue,\n  preprocessHook: preprocessHookValue,\n  postprocessHook: postprocessHookValue,\n  suggestionsFilter: suggestionsFilterValue,\n  sendGeocoderRequestFunc: sendGeocoderRequestFuncValue,\n  sendPlaceDetailsRequestFunc: sendPlaceDetailsRequestFuncValue,\n  placeSelect: placeSelectCallback,\n  suggestionsChange: suggestionsChangeCallback,\n  onUserInput: userInputCallback,\n  onOpen: openCallback,\n  onClose: closeCallback,\n  onRequestStart: requestStartCallback,\n  onRequestEnd: requestEndCallback,\n}: GeoapifyGeocoderAutocompleteOptions) => {\n  const apiKey = React.useContext<string>(GeoapifyApiKey);\n  let geocoderContainer: HTMLDivElement | null;\n\n  const geocoderAutocomplete: MutableRefObject<\n    GeocoderAutocomplete | undefined\n  > = useRef<GeocoderAutocomplete | undefined>(undefined);\n\n  const placeSelectCallbackRef: MutableRefObject<\n    ((value: any) => void) | undefined\n  > = useRef<((value: any) => void) | undefined>(undefined);\n\n  const suggestionsChangeCallbackRef: MutableRefObject<\n    ((value: any) => void) | undefined\n  > = useRef<((value: any) => void) | undefined>(undefined);\n\n  const userInputCallbackRef: MutableRefObject<\n    ((input: string) => void) | undefined\n  > = useRef<((input: string) => void) | undefined>(undefined);\n\n  const openCallbackRef: MutableRefObject<\n    ((opened: boolean) => void) | undefined\n  > = useRef<((opened: boolean) => void) | undefined>(undefined);\n\n  const closeCallbackRef: MutableRefObject<\n    ((opened: boolean) => void) | undefined\n  > = useRef<((opened: boolean) => void) | undefined>(undefined);\n\n  const requestStartCallbackRef: MutableRefObject<\n    ((value: string) => void) | undefined\n  > = useRef<((value: string) => void) | undefined>(undefined);\n\n  const requestEndCallbackRef: MutableRefObject<\n    ((success: boolean, data?: any, error?: any) => void) | undefined\n  > = useRef<((success: boolean, data?: any, error?: any) => void) | undefined>(undefined);\n\n  placeSelectCallbackRef.current = placeSelectCallback;\n  suggestionsChangeCallbackRef.current =  suggestionsChangeCallback;\n\n  userInputCallbackRef.current = userInputCallback;\n  openCallbackRef.current = openCallback;\n  closeCallbackRef.current = closeCallback;\n  requestStartCallbackRef.current = requestStartCallback;\n  requestEndCallbackRef.current = requestEndCallback;\n\n  const onSelect = React.useCallback((value: any) => {\n    if (placeSelectCallbackRef.current) {\n      placeSelectCallbackRef.current(value);\n    }\n  },[]);\n\n  const onSuggestions = React.useCallback((value: any) => {\n    if (suggestionsChangeCallbackRef.current) {\n      suggestionsChangeCallbackRef.current(value);\n    }\n  },[]);\n\n  const onUserInput = React.useCallback((input: string) => {\n    if (userInputCallbackRef.current) {\n      userInputCallbackRef.current(input);\n    }\n  },[]);\n\n  const onOpen = React.useCallback((opened: boolean) => {\n    if (openCallbackRef.current) {\n      openCallbackRef.current(opened);\n    }\n  },[]);\n\n  const onClose = React.useCallback((opened: boolean) => {\n    if (closeCallbackRef.current) {\n      closeCallbackRef.current(opened);\n    }\n  },[]);\n\n  const onRequestStart = React.useCallback((value: string) => {\n    if (requestStartCallbackRef.current) {\n      requestStartCallbackRef.current(value);\n    }\n  },[]);\n\n  const onRequestEnd = React.useCallback((success: boolean, data?: any, error?: any) => {\n    if (requestEndCallbackRef.current) {\n      requestEndCallbackRef.current(success, data, error);\n    }\n  },[]);\n\n  useEffect(() => {\n    if(!geocoderAutocomplete.current) {\n      geocoderAutocomplete.current = new GeocoderAutocomplete(\n        geocoderContainer as HTMLDivElement,\n        apiKey,\n        {\n          placeholder: placeholderValue || \"\",\n          addDetails: addDetailsValue,\n          skipIcons: skipIconsValue,\n          skipSelectionOnArrowKey: skipSelectionOnArrowKeyValue,\n          allowNonVerifiedHouseNumber: allowNonVerifiedHouseNumberValue,\n          allowNonVerifiedStreet: allowNonVerifiedStreetValue,\n          debounceDelay: debounceDelayValue || 100\n        }\n      );\n    }\n\n    geocoderAutocomplete.current.on(\"select\", onSelect);\n    geocoderAutocomplete.current.on(\"suggestions\", onSuggestions);\n    geocoderAutocomplete.current.on(\"input\", onUserInput);\n    geocoderAutocomplete.current.on(\"close\", onClose);\n    geocoderAutocomplete.current.on(\"open\", onOpen);\n    geocoderAutocomplete.current.on(\"request_start\", onRequestStart);\n    geocoderAutocomplete.current.on(\"request_end\", onRequestEnd);\n\n    if (sendGeocoderRequestFuncValue) {\n      geocoderAutocomplete.current.setSendGeocoderRequestFunc(sendGeocoderRequestFuncValue)\n    }\n    return () => {\n      if (geocoderAutocomplete.current) {\n        geocoderAutocomplete.current.off(\"select\", onSelect);\n        geocoderAutocomplete.current.off(\"suggestions\", onSuggestions);\n        geocoderAutocomplete.current.off(\"input\", onUserInput);\n        geocoderAutocomplete.current.off(\"close\", onClose);\n        geocoderAutocomplete.current.off(\"open\", onOpen);\n        geocoderAutocomplete.current.off(\"request_start\", onRequestStart);\n        geocoderAutocomplete.current.off(\"request_end\", onRequestEnd);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.setType(typeValue as LocationType);\n    }\n  }, [typeValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.setLang(langValue as SupportedLanguage);\n    }\n  }, [langValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current && positionValue) {\n      console.warn(\n        \"WARNING! Obsolete function called. The  'position' input has been deprecated, please use the new 'biasByLocation' input instead!\"\n      );\n      geocoderAutocomplete.current.addBiasByProximity(\n        positionValue as GeoPosition\n      );\n    }\n  }, [positionValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current && countryCodesValue) {\n      console.warn(\n        \"WARNING! Obsolete function called. The  'countryCodes' input has been deprecated, please use the new 'filterByCountryCode' input instead!\"\n      );\n      geocoderAutocomplete.current.addFilterByCountry(\n        countryCodesValue as CountyCode[]\n      );\n    }\n  }, [countryCodesValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.setLimit(limitValue as number);\n    }\n  }, [limitValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.setValue((valueValue as string) || \"\");\n    }\n  }, [valueValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.addFilterByCountry(\n        filterByCountryCodeValue as ByCountryCodeOptions\n      );\n    }\n  }, [filterByCountryCodeValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.addFilterByCircle(\n        filterByCircleValue as ByCircleOptions\n      );\n    }\n  }, [filterByCircleValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.addFilterByRect(\n        filterByRectValue as ByRectOptions\n      );\n    }\n  }, [filterByRectValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.addFilterByPlace(\n        filterByPlaceValue as string\n      );\n    }\n  }, [filterByRectValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.addBiasByCountry(\n        biasByCountryCodeValue as ByCountryCodeOptions\n      );\n    }\n  }, [biasByCountryCodeValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.addBiasByCircle(\n        biasByCircleValue as ByCircleOptions\n      );\n    }\n  }, [biasByCircleValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.addBiasByRect(\n        biasByRectValue as ByRectOptions\n      );\n    }\n  }, [biasByRectValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.addBiasByProximity(\n        biasByProximityValue as ByProximityOptions\n      );\n    }\n  }, [biasByProximityValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.setPreprocessHook(\n        preprocessHookValue\n      );\n    }\n  }, [preprocessHookValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.setPostprocessHook(\n        postprocessHookValue\n      );\n    }\n  }, [postprocessHookValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current) {\n      geocoderAutocomplete.current.setSuggestionsFilter(\n        suggestionsFilterValue\n      );\n    }\n  }, [suggestionsFilterValue]);\n\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current && sendGeocoderRequestFuncValue) {\n      geocoderAutocomplete.current.setSendGeocoderRequestFunc(\n        sendGeocoderRequestFuncValue\n      );\n    }\n  }, [sendGeocoderRequestFuncValue]);\n\n  useEffect(() => {\n    if (geocoderAutocomplete.current && sendPlaceDetailsRequestFuncValue) {\n      geocoderAutocomplete.current.setSendPlaceDetailsRequestFunc(\n        sendPlaceDetailsRequestFuncValue\n      );\n    }\n  }, [sendPlaceDetailsRequestFuncValue]);\n\n  return (\n    <div\n      className=\"geocoder-container\"\n      style={{ position: \"relative\" }}\n      ref={(el) => { geocoderContainer = el; }}\n    ></div>\n  );\n};\n"],"names":["GeoapifyApiKey","React","createContext","GeoapifyContext","props","Provider","value","apiKey","children","GeoapifyGeocoderAutocomplete","_ref","placeholderValue","placeholder","typeValue","type","langValue","lang","limitValue","limit","valueValue","filterByCountryCodeValue","filterByCountryCode","filterByCircleValue","filterByCircle","filterByRectValue","filterByRect","filterByPlaceValue","filterByPlace","biasByCountryCodeValue","biasByCountryCode","biasByCircleValue","biasByCircle","biasByRectValue","biasByRect","biasByProximityValue","biasByProximity","positionValue","position","countryCodesValue","countryCodes","debounceDelayValue","debounceDelay","skipIconsValue","skipIcons","skipSelectionOnArrowKeyValue","skipSelectionOnArrowKey","allowNonVerifiedHouseNumberValue","allowNonVerifiedHouseNumber","allowNonVerifiedStreetValue","allowNonVerifiedStreet","addDetailsValue","addDetails","preprocessHookValue","preprocessHook","postprocessHookValue","postprocessHook","suggestionsFilterValue","suggestionsFilter","sendGeocoderRequestFuncValue","sendGeocoderRequestFunc","sendPlaceDetailsRequestFuncValue","sendPlaceDetailsRequestFunc","placeSelectCallback","placeSelect","suggestionsChangeCallback","suggestionsChange","userInputCallback","onUserInput","openCallback","onOpen","closeCallback","onClose","requestStartCallback","onRequestStart","requestEndCallback","onRequestEnd","useContext","geocoderContainer","geocoderAutocomplete","useRef","undefined","placeSelectCallbackRef","suggestionsChangeCallbackRef","userInputCallbackRef","openCallbackRef","closeCallbackRef","requestStartCallbackRef","requestEndCallbackRef","current","onSelect","useCallback","onSuggestions","input","opened","success","data","error","useEffect","GeocoderAutocomplete","on","setSendGeocoderRequestFunc","off","setType","setLang","console","warn","addBiasByProximity","addFilterByCountry","setLimit","setValue","addFilterByCircle","addFilterByRect","addFilterByPlace","addBiasByCountry","addBiasByCircle","addBiasByRect","setPreprocessHook","setPostprocessHook","setSuggestionsFilter","setSendPlaceDetailsRequestFunc","className","style","ref","el"],"mappings":"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"}